<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.openanalytics</groupId>
	<artifactId>shinyproxy</artifactId>
	<version>2.6.0</version>
	<packaging>jar</packaging>

	<name>ShinyProxy</name>
	<description>deploy Shiny apps in an enterprise context</description>

	<organization>
		<name>Open Analytics NV</name>
		<url>https://www.shinyproxy.io/</url>
	</organization>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.12.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<containerproxy.version>0.8.10</containerproxy.version>
		<resource.delimiter>&amp;</resource.delimiter>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>oa-nexus-snapshots</id>
			<name>OpenAnalytics Snapshots Repository</name>
			<url>https://nexus.openanalytics.eu/repository/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>oa-nexus-releases</id>
			<name>OpenAnalytics Release Repository</name>
			<url>https://nexus.openanalytics.eu/repository/releases</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>oa-nexus-snapshots</id>
			<name>OpenAnalytics Snapshots Repository</name>
<!-- 			<url>http://nexus.openanalytics.eu/nexus/content/repositories/snapshots</url> -->
			<url>https://nexus.openanalytics.eu/repository/snapshots</url>
			<snapshots><enabled>true</enabled></snapshots>
			<releases><enabled>false</enabled></releases>
		</repository>
		<repository>
			<id>oa-nexus-releases</id>
			<name>OpenAnalytics Snapshots Repository</name>
<!-- 			<url>http://nexus.openanalytics.eu/nexus/content/repositories/releases</url> -->
			<url>https://nexus.openanalytics.eu/repository/releases</url>
			<snapshots><enabled>false</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>eu.openanalytics</groupId>
			<artifactId>containerproxy</artifactId>
			<version>${containerproxy.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr353</artifactId>
			<version>2.11.2</version>
			<!-- We need a higher version than shipped by Spring to have all functionality (namely JsonPatch support) -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>js-cookie</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>handlebars</artifactId>
			<version>4.7.6</version>
		</dependency>
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-core</artifactId>
			<version>2.2.8.Final</version>
		</dependency>
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-servlet</artifactId>
			<version>2.2.8.Final</version>
		</dependency>
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-websockets-jsr</artifactId>
			<version>2.2.8.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<version>3.8.4.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-api</artifactId>
			<version>3.8.4.Final</version>
                </dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>static/handlebars/node_modules/**</exclude>
					<exclude>static/handlebars/.gitignore</exclude>
					<exclude>static/handlebars/generate.sh</exclude>
					<exclude>static/handlebars/*.handlebars</exclude>
					<exclude>**/.gitignore</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
                                                <id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>eu.openanalytics.containerproxy.ContainerProxyApplication</mainClass>
						</configuration>
					</execution>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<containerProxyVersion>${containerproxy.version}</containerProxyVersion>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.5</version>
				<!--
				<executions>
		        	<execution>
				        <id>generate-rpm</id>
				        <goals>
					       <goal>attached-rpm</goal>
				        </goals>
			        </execution>
		        </executions>
				-->
				<configuration>
					<license>(c) Copyright Open Analytics NV, 2016-2020 - Apache License 2.0</license>
					<release>1.el7</release>
					<group>Development/Tools</group>
					<packager>Open Analytics</packager>
					<defineStatements>
						<defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
					</defineStatements>
					<mappings>
						<mapping>
							<directory>/opt/shinyproxy</directory>
							<filemode>755</filemode>
							<username>shinyproxy</username>
							<groupname>shinyproxy</groupname>
						</mapping>
						<mapping>
							<directory>/opt/shinyproxy</directory>
							<filemode>755</filemode>
							<username>shinyproxy</username>
							<groupname>shinyproxy</groupname>
							<artifact />
						</mapping>
						<mapping>
							<directory>/opt/shinyproxy</directory>
							<sources>
								<softlinkSource>
									<destination>shinyproxy.jar</destination>
									<location>shinyproxy-${project.version}.jar</location>
								</softlinkSource>
							</sources>
						</mapping>
						<mapping>
							<directory>/opt/shinyproxy</directory>
							<filemode>755</filemode>
							<username>shinyproxy</username>
							<groupname>shinyproxy</groupname>
							<sources>
								<source>
									<location>src/deb/shinyproxy.service</location>
								</source>
								<source>
									<location>src/deb/shinyproxy.conf</location>
								</source>
								<source>
									<location>src/main/resources/application-demo.yml</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>/etc/shinyproxy</directory>
							<filemode>755</filemode>
							<username>shinyproxy</username>
							<groupname>shinyproxy</groupname>
						</mapping>
					</mappings>
					<requires>
						<require>java</require>
					</requires>
					<preinstallScriptlet>
						<scriptFile>src/deb/control/preinst</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>
					<postinstallScriptlet>
						<scriptFile>src/deb/control/postinst</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>
					<preremoveScriptlet>
						<scriptFile>src/deb/control/prerm</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>
					<postremoveScriptlet>
						<scriptFile>src/deb/control/postrm</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.5</version>
				<!--
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
					</execution>
				</executions>
				-->
				<configuration>
					<verbose>true</verbose>
					<controlDir>${basedir}/src/deb/control</controlDir>
					<dataSet>
						<data>
							<src>${project.build.directory}/${project.build.finalName}.jar</src>
							<type>file</type>
							<mapper>
								<type>perm</type>
								<prefix>/opt/${project.artifactId}</prefix>
								<user>shinyproxy</user>
								<group>shinyproxy</group>
							</mapper>
						</data>
						<data>
							<type>link</type>
							<symlink>true</symlink>
							<linkName>/opt/${project.artifactId}/${project.artifactId}.jar</linkName>
							<linkTarget>/opt/${project.artifactId}/${project.build.finalName}.jar</linkTarget>
						</data>
						<data>
							<src>${basedir}/src/deb/shinyproxy.service</src>
							<type>file</type>
							<mapper>
								<type>perm</type>
								<prefix>/opt/${project.artifactId}</prefix>
								<user>shinyproxy</user>
								<group>shinyproxy</group>
							</mapper>
						</data>
						<data>
							<src>${basedir}/src/deb/shinyproxy.conf</src>
							<type>file</type>
							<mapper>
								<type>perm</type>
								<prefix>/opt/${project.artifactId}</prefix>
								<user>shinyproxy</user>
								<group>shinyproxy</group>
							</mapper>
						</data>
						<data>
							<src>${basedir}/src/main/resources/application-demo.yml</src>
							<type>file</type>
							<mapper>
								<type>perm</type>
								<prefix>/opt/${project.artifactId}</prefix>
								<user>shinyproxy</user>
								<group>shinyproxy</group>
							</mapper>
						</data>
						<data>
							<type>template</type>
							<paths>
								<path>etc/${project.artifactId}</path>
							</paths>
							<mapper>
								<type>perm</type>
								<user>shinyproxy</user>
								<group>shinyproxy</group>
							</mapper>
						</data>
					</dataSet>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>LICENSE_HEADER</header>
					<aggregate>true</aggregate>
					<strictCheck>true</strictCheck>
					<excludes>
						<exclude>*.log</exclude>
						<exclude>mvnw.cmd</exclude>
						<exclude>mvnw</exclude>
						<exclude>**/*.properties</exclude>
						<exclude>**/*.yml</exclude>
						<exclude>**/*.xml</exclude>
						<exclude>LICENSE</exclude>
						<exclude>LICENSE_HEADER</exclude>
						<exclude>Dockerfile</exclude>
						<exclude>README.md</exclude>
						<exclude>**/*.json</exclude>
						<exclude>.gitignore</exclude>
						<exclude>src/deb/**</exclude>
						<exclude>templates/**</exclude>
						<exclude>src/main/resources/static/handlebars/node_modules/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<!--
					<execution>
						<id>generate-copyright-headers</id>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
					-->
					<execution>
						<id>check-copyright-headers</id>
						<phase>package</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.nicoulaj.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<version>1.9</version>
				<executions>
					<execution>
						<goals>
							<goal>files</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>*.jar</include>
                                                <include>*.pom</include>
                                            </includes>
                                            <excludes>
                                                <exclude>*.sha256</exclude>
                                                <exclude>*.md5</exclude>
                                            </excludes>
                                        </fileSet>
                                    </fileSets>
                                    <algorithms>
                                       <algorithm>SHA-256</algorithm>
                                       <algorithm>MD5</algorithm>
                                   </algorithms>
                                   <attachChecksums>true</attachChecksums>
                                   <csvSummary>false</csvSummary>
                                </configuration>
			</plugin>
			<plugin>
    			<artifactId>maven-deploy-plugin</artifactId>
    			<version>3.0.0-M1</version>
    			<configuration>
        			<updateReleaseInfo>true</updateReleaseInfo>
    			</configuration>
			</plugin>
		</plugins>
	</build>

        <profiles>
          <profile>
            <id>owasp-dependency-check</id>
            <build>
              <plugins>
                <plugin>
                  <groupId>org.owasp</groupId>
                  <artifactId>dependency-check-maven</artifactId>
				<version>6.1.6</version>
                  <configuration>
                    <suppressionFiles>
                        <suppressionFile>owasp-suppression.xml</suppressionFile>
                    </suppressionFiles>
                    </configuration>
                  <executions>
                    <execution>
                      <goals>
                        <goal>check</goal>
                      </goals>
                    </execution>
                  </executions>
                </plugin>
              </plugins>
            </build>
          </profile>
        </profiles>

</project>
